evaluationDependsOn(':userservice-api')
afterEvaluate {
	compileJava.dependsOn('clean')
}
ext.javaVersion =  project.hasProperty('javaVersion') ? project.getProperty('javaVersion') : '1.8'
group = 'fr.sma.sy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

/* Dependencies */
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2'
	implementation 'org.modelmapper:modelmapper:2.3.7'
	// implementation 'fr.sma.svc.bw:userservice-api:1.0.0'
    implementation project(':userservice-api')
	compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'
	testCompileOnly 'org.projectlombok:lombok:1.18.12'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.hamcrest:hamcrest-all:1.3'
	testImplementation 'junit:junit:4.13'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}
test {
	useJUnit()
	testLogging.showStandardStreams = true
	minHeapSize = "128m"
	maxHeapSize = "512m"
	jvmArgs '-XX:MaxPermSize=256m'
	failFast = true
	include 'fr/sma/sy/tests/unit/**'
	include 'fr/sma/sy/tests/integrations/**'
}
apply plugin: "io.spring.dependency-management"
apply plugin: "org.springframework.boot"




